<?php

/**
 * @file
 * Contains seo_negotiator.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function seo_negotiator_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the seo_negotiator module.
    case 'help.page.seo_negotiator':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('域名下主题设置') . '</p>';
      return $output;
    case 'seo_negotiator.theme_list':
      $output = '';
      $output .= '<p>注：未绑定模板的域名将会随机调用，支持泛域名绑定，如: *.abc.com，注：域名必须是对应模型下的才有效</p>';

      return $output;
      break;
    default:
  }
}
/**
 * Implements hook_sidebar_tee_menu_alter().
 */
function seo_negotiator_sidebar_tee_menu_alter(&$data) {
  $icons = [
    'seo_negotiator.theme_list' => 'gitee-icon icon project',
  ];
  _eabax_core_set_menu_items_icon($data, $icons);
}


/**
 * Implements hook_block_access() 隐藏侧边内容栏.
 */
function seo_negotiator_block_access(\Drupal\block\Entity\Block $block, $operation, \Drupal\Core\Session\AccountInterface $account) {
  if ($operation == 'view') {
    $plugin_id = $block->getPluginId();

    $hide_block = [
      'page_title_block',
      'seo_content_notice_block',
      'views_block:content_recent-block_1',
    ];
    if (in_array($plugin_id, $hide_block)) {
      $route_name = \Drupal::routeMatch()->getRouteName();
      $hide_on = [
        'seo_negotiator.theme_list',
      ];

      if (in_array($route_name, $hide_on)) {
        return \Drupal\Core\Access\AccessResult::forbidden();
      }
    }
    return \Drupal\Core\Access\AccessResult::neutral();
  }
}

/**
 * Implements hook_theme().
 */
function seo_negotiator_theme($existing, $type, $theme, $path) {
  $theme = [];
  $theme['negotiator_theme_form'] = [
    'render element' => 'form',
  ];

  return $theme;
}

/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function seo_negotiator_theme_suggestions_views_view_list_alter(array &$suggestions, array $variables) {
  $view = $variables['view'];
  if (!empty($view)) {
    $suggestions[] = 'views_view_list__' . $view->id();
  }
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for views_view.
 */
function seo_negotiator_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {
  $view = $variables['view'];
  if (!empty($view)) {
    $suggestions[] = 'views_view__' . $view->id();
    if ($view->id() == 'taxonomy_term') {
      $args = $view->args;
      if (is_numeric($args[0])) {
        $suggestions[] = 'views_view__' . $view->id() . '_%';
      }
      $suggestions[] = 'views_view__' . $view->id() . '_' . $args[0];
    }
  }
}
